// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  COMPANY
  MEMBER
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  password    String
  enabled     Boolean    @default(false)
  role        Role
  dni_cuit    String?
  name        String?
  imageUrl    String
  address     String
  latitude    Float? // se agrega pero no es obligatorio
  longitude   Float? //lo hacemos obligatorio a la hora de crear una nueva compa√±ia
  phoneNumber String?
  lastPayment DateTime?
  description String?
  Item        Item[]
  Voucher     Voucher[]
  Shopping    Shopping[]
  Review      Review[]
}

model Item {
  id            Int             @id @default(autoincrement())
  user          User            @relation(fields: [userId], references: [id])
  userId        Int
  category      Category        @relation(fields: [categoryId], references: [id])
  categoryId    Int
  description   String?
  name          String
  price         Float           @default(0)
  imageUrl      String
  discount      Int
  enabled       Boolean         @default(true)
  Voucher       Voucher[]
  Item_Shopping Item_Shopping[]
  Review        Review[]
}

model Review {
  id            Int             @id @default(autoincrement())
  item          Item            @relation(fields: [itemId], references: [id])
  itemId        Int
  user          User            @relation(fields: [userId], references: [id])
  userId        Int
  comment       String?
  star1         Boolean         @default(false)
  star2         Boolean         @default(false)
  star3         Boolean         @default(false)
  star4         Boolean         @default(false)
  star5         Boolean         @default(false)
  enabled       Boolean         @default(true)
}

model Category {
  id      Int     @id @default(autoincrement())
  name    String
  enabled Boolean @default(false)
  Item    Item[]
}

model Voucher {
  id             Int      @id @default(autoincrement())
  item           Item     @relation(fields: [itemId], references: [id])
  itemId         Int
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  code           String
  enabled        Boolean  @default(true)
  expirationDate DateTime
}

enum WayToPay {
  CASH
  CARD
}

enum State {
  SUCCESS
  PENDING
}

model Shopping {
  id            Int             @id @default(autoincrement())
  user          User            @relation(fields: [userId], references: [id])
  userId        Int
  pdfUrl        String
  wayToPay      WayToPay
  state         State
  Item_Shopping Item_Shopping[]
}

model Item_Shopping {
  id           Int      @id @default(autoincrement())
  item         Item     @relation(fields: [itemId], references: [id])
  itemId       Int
  shopping     Shopping @relation(fields: [shoppingId], references: [id])
  shoppingId   Int
  quantityItem Int
}

// Aca se crean los modelos de la base de datos
